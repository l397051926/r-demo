<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gennlife.rws.dao.BatchingSqlMapMapper">
    <resultMap id="BaseResultMap" type="com.gennlife.rws.entity.BatchingSqlMap">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="data_source_id" property="dataSourceId" jdbcType="VARCHAR"/>
        <result column="pat_group_id" property="patGroupId" jdbcType="INTEGER"/>
        <result column="patient_sn_ids" property="patientSnIds" jdbcType="LONGVARCHAR"/>
        <result column="export" property="export" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
		id, data_source_id, pat_group_id, patient_sn_ids
	</sql>
    <insert id="insert" parameterType="com.gennlife.rws.entity.BatchingSqlMap">
        insert into batching_sql_map
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dataSourceId != null">
                data_source_id,
            </if>
            <if test="patGroupId != null">
                pat_group_id,
            </if>
            <if test="patientSnIds != null">
                patient_sn_ids,
            </if>
            <if test="export != null">
                export,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="dataSourceId != null">
                #{dataSourceId,jdbcType=VARCHAR},
            </if>
            <if test="patGroupId != null">
                #{patGroupId,jdbcType=INTEGER},
            </if>
            <if test="patientSnIds != null">
                #{patientSnIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="export != null">
                #{export,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.gennlife.rws.entity.BatchingSqlMap">
        update batching_sql_map
        <set>
            <if test="dataSourceId != null">
                data_source_id = #{dataSourceId,jdbcType=VARCHAR},
            </if>
            <if test="patGroupId != null">
                pat_group_id = #{patGroupId,jdbcType=INTEGER},
            </if>
            <if test="dataSourceId != null">
                patient_sn_ids = #{dataSourceId,jdbcType=LONGVARCHAR},
            </if>
            <if test="export != null">
                export = #{export,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateExportByPatientSetId" parameterType="java.lang.Object">
        update batching_sql_map
        <set>
            <if test="export != null">
                export = #{export,jdbcType=INTEGER},
            </if>
        </set>
        where data_source_id = #{dataSourceId,jdbcType=VARCHAR}
    </update>

    <select id="getPatientsSqlMapByDataSourceId" resultMap="BaseResultMap" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from batching_sql_map
        where data_source_id = #{dataSourceId,jdbcType=VARCHAR}
    </select>

    <select id="getPatientsSqlMapByDataSourceIdAndExclude" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from batching_sql_map
        where data_source_id = #{dataSourceId,jdbcType=VARCHAR} AND export = #{export,jdbcType=INTEGER}
        ORDER BY id
    </select>

    <select id="getPatientsSqlMapByIdAndExclude" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from batching_sql_map
        where id = #{id,jdbcType=INTEGER} AND export = #{export,jdbcType=INTEGER}
    </select>

    <select id="getPatientsSqlMapBypatientSetIdsAndExclude" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from batching_sql_map
        where data_source_id IN
        <foreach item="item" index="index" open="(" separator="," close=")" collection="dataSourceIds">
            #{item}
        </foreach>
        AND export = #{export,jdbcType=INTEGER}
        ORDER BY id
    </select>

    <insert id="insertForGroupid" parameterType="com.gennlife.rws.entity.BatchingSqlMap">
        INSERT INTO `batching_sql_map`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dataSourceId != null">
                `data_source_id`,
            </if>
            `pat_group_id`,
            <if test="patientSnIds != null">
                `patient_sn_ids`,
            </if>
            <if test="export != null">
                `export`,
            </if>
        </trim>
        <trim prefix="SELECT " suffix="" suffixOverrides=",">
            <if test="dataSourceId != null">
                #{dataSourceId,jdbcType=VARCHAR},
            </if>
            (SELECT IFNULL((SELECT MAX(pat_group_id) from `batching_sql_map` where `data_source_id` =
            #{dataSourceId,jdbcType=VARCHAR}),-1))+1,
            <if test="patientSnIds != null">
                #{patientSnIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="export != null">
                #{export,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="deleteByDataSourceId" parameterType="java.lang.String">
        delete from
        batching_sql_map
        where  data_source_id = #{dataSourceId,jdbcType=VARCHAR}
    </delete>
</mapper>