<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gennlife.rws.dao.ActiveIndexConfigConditionMapper" >
  <resultMap id="BaseResultMap" type="com.gennlife.rws.entity.ActiveIndexConfigCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="active_index_config_id" property="activeIndexConfigId" jdbcType="VARCHAR" />
    <result column="source_tag_name_desc" property="sourceTagNameDesc" jdbcType="VARCHAR" />
    <result column="source_tag_name" property="sourceTagName" jdbcType="VARCHAR" />
    <result column="target_tag_name_desc" property="targetTagNameDesc" jdbcType="VARCHAR" />
    <result column="target_tag_name" property="targetTagName" jdbcType="VARCHAR" />
    <result column="operator_sign" property="operatorSign" jdbcType="VARCHAR" />
    <result column="ref_relation" property="refRelation" jdbcType="VARCHAR" />
    <result column="logic_sing" property="logicSing" jdbcType="VARCHAR" />
    <result column="ref_active_id" property="refActiveId" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="ref_active_name" property="refActiveName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="need_path" property="needPath" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="operator_sign_desc" property="operatorSignDesc" jdbcType="VARCHAR" />
    <result column="condition_type" property="conditionType" jdbcType="INTEGER" />
    <result column="node_type" property="nodeType" jdbcType="VARCHAR" />
    <result column="acceptance_state" property="acceptanceState" jdbcType="INTEGER" />
    <result column="before" property="before" jdbcType="VARCHAR" />
    <result column="after" property="after" jdbcType="VARCHAR" />
    <result column="json_type" property="jsonType" jdbcType="VARCHAR" />
    <result column="title_info" property="titleInfo" jdbcType="VARCHAR" />
    <result column="inner_lever" property="innerLever" jdbcType="INTEGER" />
    <result column="orde" property="orde" jdbcType="INTEGER" />
    <result column="title_type" property="titleType" jdbcType="VARCHAR" />
    <result column="children_key" property="childrenKey" jdbcType="VARCHAR" />
    <result column="enum_active_config_id" property="enumActiveConfigId" jdbcType="VARCHAR" />
    <collection column="id" property="inner" ofType="ActiveIndexConfigCondition" javaType="java.util.ArrayList" select="selectInner"/>
    <collection column="id" property="detail" ofType="ActiveIndexConfigCondition" javaType="java.util.ArrayList" select="selectDetail"/>
    <collection column="id" property="details" ofType="ActiveIndexConfigCondition" javaType="java.util.ArrayList" select="selectDetails"/>
    <collection column="id" property="strongRef" ofType="ActiveIndexConfigCondition" javaType="java.util.ArrayList" select="selectStrongRefs"/>
  </resultMap>
  <resultMap id="BaseRelationResultMap" type="com.gennlife.rws.entity.ActiveIndexRelation" >
    <result column="ref_active_id" property="refActiveId" jdbcType="VARCHAR" />
    <result column="active_name" property="activeName" jdbcType="VARCHAR" />
    <result column="active_index_id" property="activeIndexId" jdbcType="VARCHAR" />
    <result column="source_name" property="sourceName" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="active_type" property="activeType" jdbcType="VARCHAR" />
    <result column="active_type_name" property="activeTypeName" jdbcType="VARCHAR" />
    <result column="is_tmp" property="isTmp" jdbcType="VARCHAR" />
    <result column="ref_active_type" property="refActiveType" jdbcType="VARCHAR" />
    <result column="index_type_desc" property="indexTypeDesc" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Reletion_List">
    ref_active_id,active_name,active_index_id,source_name,project_id,
    active_type,active_type_name,is_tmp,ref_active_type,index_type_desc,update_time,create_time
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    id, active_index_config_id, source_tag_name_desc, source_tag_name, target_tag_name_desc, 
    target_tag_name, operator_sign, ref_relation, logic_sing, ref_active_id, value, parent_id,
    ref_active_name,type,level,need_path,operator_sign_desc,condition_type,uuid,node_type,
    acceptance_state,`before`,`after`,`title_info`,json_type,inner_lever,orde,title_type,children_key,enum_active_config_id
  </sql>

  <select id="selectInner" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
      from active_index_config_condition where parent_id=#{id} and type=1
  </select>
  <select id="selectDetails"  resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
      from active_index_config_condition where parent_id=#{id} and type=2
  </select>
  <select id="selectDetail"  resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
      from active_index_config_condition where parent_id=#{id} and (type=2 or type = 1) and node_type != 'placeholder'
  </select>
  <select id="selectStrongRefs"  resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
      from active_index_config_condition where parent_id=#{id} and type=3
  </select>
  <select id="selectStrongRef"  resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
      from active_index_config_condition where active_index_config_id=#{configid} and type=3
  </select>


  <select id="findByConfigId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    from active_index_config_condition where active_index_config_id=#{configId}

  </select>
  <select id="selectRelation" resultMap="BaseRelationResultMap" parameterType="java.lang.String">
    SELECT
     <include refid="Reletion_List" />
    FROM
    (
    SELECT
    ref_active_id,
    active_index.`name` AS active_name,
    conf.active_index_id AS active_index_id,
    CASE indexs.active_type
    WHEN '3' THEN
    conf.active_result
    ELSE
    indexs.`name`
    END AS source_name,
    indexs.project_id AS project_id,
    indexs.active_type AS active_type,
    CASE indexs.active_type
    WHEN '1' THEN
    '事件'
    WHEN '2' THEN
    '指标'
    ELSE
    conf.active_result
    END AS active_type_name,
    conf.index_type_desc,
    indexs.update_time AS update_time,
    indexs.create_time AS create_time,
    indexs.is_tmp AS is_tmp,
    active_index.active_type AS ref_active_type
    FROM
    (
    SELECT
    ref_active_id,
    active_index_config_id
    FROM
    active_index_config_condition
    WHERE
    `value` IS NOT NULL
    AND `value` != ''
    ) con
    LEFT JOIN active_index ON con.ref_active_id = active_index.id
    JOIN active_index_config conf ON con.active_index_config_id = conf.id
    JOIN active_index indexs ON indexs.id = conf.active_index_id
    ) aa
    <where>
      <if test="ids!=null">
        aa.active_index_id in
        <foreach collection="ids" separator="," open="(" close=")" item="item">
          #{item.id}
        </foreach>
        AND
      </if>

      <if test="projectId != null">
        aa.project_id=#{projectId}
      </if>
      <if test="activeType == 1 || activeType == 2 || activeType == 3 ">
        AND aa.active_type = #{activeType}
      </if>
      <if test="activeType == 5 ">
        AND aa.active_type in(1,2,3)
      </if>
      <if test="isTmp != null ">
        AND aa.is_tmp = #{isTmp}
      </if>
      <if test="activeName != null ">
        AND aa.source_name like concat('%',#{activeName},'%')
      </if>
    </where>
    ORDER BY  create_time desc
  </select>
  <select id="selectRelationByRefId" resultMap="BaseRelationResultMap" parameterType="java.lang.String">
    SELECT
     <include refid="Reletion_List" />
    from (SELECT ref_active_id,active_index.`name` as active_name ,conf.active_index_id as active_index_id,CASE indexs.active_type WHEN '3' THEN conf.active_result ELSE indexs.`name` END as source_name, indexs.project_id as project_id, indexs.active_type as active_type ,
    CASE indexs.active_type when '1' THEN '事件' WHEN '2' THEN '指标' ELSE conf.active_result END as active_type_name,conf.index_type_desc,active_index.update_time as update_time,active_index.create_time as create_time,
    indexs.is_tmp as is_tmp,active_index.active_type as ref_active_type from (SELECT ref_active_id,active_index_config_id  from active_index_config_condition where `value` is not null and `value`!='')  con left join active_index on con.ref_active_id = active_index.id
    JOIN active_index_config conf on con.active_index_config_id = conf.id join active_index indexs on indexs.id=conf.active_index_id ) aa
    <where>
      <if test="ids!=null">
        aa.ref_active_id in
        <foreach collection="ids" separator="," open="(" close=")" item="item">
          #{item.id}
        </foreach>
        AND
      </if>

      <if test="projectId != null">
        aa.project_id=#{projectId}
      </if>
      <if test="activeType == 1 || activeType == 2 || activeType == 3 ">
        AND aa.active_type = #{activeType}
      </if>
      <if test="activeType == 5 ">
        AND aa.active_type in(1,2,3)
      </if>
      <if test="isTmp != null ">
        AND aa.is_tmp = #{isTmp}
      </if>
      <if test="activeName != null ">
        AND aa.source_name like concat('%',#{activeName},'%')
      </if>
    </where>
    ORDER BY  create_time desc
  </select>
  <select id="listCountByParam" resultType="java.lang.Integer" parameterType="java.lang.String">
    SELECT
     count(1)
    from (SELECT ref_active_id,active_index.`name` as active_name ,conf.active_index_id as active_index_id,indexs.`name` as source_name, indexs.project_id as project_id, indexs.active_type as active_type ,
    CASE indexs.active_type when '1' THEN '事件' WHEN '2' THEN '指标' ELSE conf.active_result END as active_type_name,conf.index_type_desc,
    indexs.is_tmp as is_tmp,active_index.active_type as ref_active_type from (SELECT ref_active_id,active_index_config_id  from active_index_config_condition where `value` is not null and `value`!='')  con left join active_index on con.ref_active_id = active_index.id
    JOIN active_index_config conf on con.active_index_config_id = conf.id join active_index indexs on indexs.id=conf.active_index_id ) aa
    <where>
      <if test="projectId != null">
        aa.project_id=#{projectId}
      </if>
      <if test="activeType == 1 || activeType == 2 || activeType == 3 ">
        AND aa.active_type = #{activeType}
      </if>
      <if test="activeType == 5 ">
        AND aa.active_type in(1,2,3)
      </if>
      <if test="isTmp != null ">
        AND aa.is_tmp = #{isTmp}
      </if>
      <if test="activeName != null ">
        AND aa.source_name like concat('%',#{activeName},'%')
      </if>
    </where>
  </select>

  <select id="findConfigIdByRefActiveId" resultType="java.lang.String" parameterType="java.lang.String">
    select DISTINCT active_index_config_id from active_index_config_condition where ref_active_id=#{activeId};

  </select>

  <select id="findMaxLevelByConfigId" resultType="java.lang.Integer" parameterType="java.lang.String">
    select max(level) from active_index_config_condition where active_index_config_id=#{configId}
  </select>
  <select id="findByRefActiveId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from active_index_config_condition
    where ref_active_id = #{refActiveId,jdbcType=VARCHAR}

  </select>
  <select id="findByParentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from active_index_config_condition
    where parent_id = #{id,jdbcType=VARCHAR}

  </select>
  <select id="findRefActiveIdByConfigId" resultType="java.lang.String" parameterType="java.util.List">
    SELECT
    ref_active_id from active_index_config_condition WHERE active_index_config_id in
    <foreach collection="list" item="item" index="index" close=")" open="(" separator=",">
      #{item}
    </foreach>
    and ref_active_id is not null and ref_active_id <![CDATA[ <> ]]>''
  </select>
  <delete id="deleteByActiveIndexConfigId" parameterType="java.lang.String">
      DELETE  from active_index_config_condition where active_index_config_id = #{activeIndexConfigId}

  </delete>
  <select id="findByConfigIdParentIdNull" resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT
      <include refid="Base_Column_List" />
      from active_index_config_condition where active_index_config_id = #{activeIndexConfigId} and (parent_id is null or parent_id='')

  </select>
  <select id="findByConfigIdAndType" resultMap="BaseResultMap" parameterType="java.lang.Object">
      SELECT
      <include refid="Base_Column_List" />
      from active_index_config_condition where active_index_config_id = #{param1} and type=#{param2}

  </select>
  <select id="findByConfigIdAndTypeAndLevel" resultMap="BaseResultMap" parameterType="java.lang.Object">
      SELECT
      <include refid="Base_Column_List" />
      from active_index_config_condition where active_index_config_id = #{param1} and type=#{param2} and level=#{param3}

  </select>
  <select id="findByIdAndTypeAndLevel" resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT
      <include refid="Base_Column_List" />
      from active_index_config_condition where id = #{id} and type=#{type} and level=#{level}

  </select>
  <select id="findByParentIdAndType" resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT
      <include refid="Base_Column_List" />
      from active_index_config_condition where parent_id=#{parentId} and type=#{type}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from active_index_config_condition
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <!-- 根据活动/指标配置id查找条件信息 -->
  <select id="findAllByActiveIndexConfigId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from active_index_config_condition
    where active_index_config_id = #{activeIndexConfigId,jdbcType=VARCHAR}

  </select>
  <select id="findByActiveIndexConfigId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from active_index_config_condition
    where active_index_config_id = #{activeIndexConfigId,jdbcType=VARCHAR} and ref_active_id is not null and ref_active_id !=''

  </select>
  <insert id="insertBatch" parameterType="java.util.List">
    replace into active_index_config_condition (id, active_index_config_id, source_tag_name_desc,
    source_tag_name, target_tag_name_desc, target_tag_name,
    operator_sign, ref_relation, logic_sing,
    ref_active_id, value, parent_id,ref_active_name,type,level,need_path,operator_sign_desc,condition_type,uuid,
    node_type,acceptance_state,`before`,`after`,`title_info`,json_type,inner_lever,orde,title_type,children_key,enum_active_config_id
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id},#{item.activeIndexConfigId},#{item.sourceTagNameDesc},#{item.sourceTagName},
      #{item.targetTagNameDesc},#{item.targetTagName},#{item.operatorSign},#{item.refRelation},
      #{item.logicSing},#{item.refActiveId},#{item.value},#{item.parentId},#{item.refActiveName},#{item.type}
      ,#{item.level},#{item.needPath},#{item.operatorSignDesc},#{item.conditionType},#{item.uuid},
      #{item.nodeType,jdbcType=VARCHAR},#{item.acceptanceState,jdbcType=INTEGER},
      #{item.before,jdbcType=VARCHAR},#{item.after,jdbcType=VARCHAR},#{item.titleInfo,jdbcType=VARCHAR},
      #{item.jsonType,jdbcType=VARCHAR}, #{item.innerLever,jdbcType=INTEGER}, #{item.orde,jdbcType=INTEGER},#{item.titleType,jdbcType=VARCHAR},#{item.childrenKey,jdbcType=VARCHAR},#{item.enumActiveConfigId,jdbcType=VARCHAR})
    </foreach>

  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    delete from active_index_config_condition
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  <insert id="insert" parameterType="com.gennlife.rws.entity.ActiveIndexConfigCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      select uuid_short()
    </selectKey>
    insert into active_index_config_condition (id, active_index_config_id, source_tag_name_desc,
      source_tag_name, target_tag_name_desc, target_tag_name,
      operator_sign, ref_relation, logic_sing,
      ref_active_id, value, parent_id,ref_active_name,type,level,need_path,operator_sign_desc,condition_type,uuid,
      node_type,acceptance_state,before,after,title_info,json_type,inner_lever,orde,title_type,children_key,enum_active_config_id)
    values (#{id,jdbcType=VARCHAR}, #{activeIndexConfigId,jdbcType=VARCHAR}, #{sourceTagNameDesc,jdbcType=VARCHAR},
      #{sourceTagName,jdbcType=VARCHAR}, #{targetTagNameDesc,jdbcType=VARCHAR}, #{targetTagName,jdbcType=VARCHAR},
      #{operatorSign,jdbcType=VARCHAR}, #{refRelation,jdbcType=VARCHAR}, #{logicSing,jdbcType=VARCHAR},
      #{refActiveId,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},#{refActiveName,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER},#{level,jdbcType=INTEGER},#{needPath,jdbcType=INTEGER},#{operatorSignDesc,jdbcType=VARCHAR},
      #{conditionType,jdbcType=INTEGER},#{uuid,jdbcType=VARCHAR},#{nodeType,jdbcType=VARCHAR},#{acceptanceState,jdbcType=INTEGER},
      #{before,jdbcType=VARCHAR},#{after,jdbcType=VARCHAR}),#{titleInfo,jdbcType=VARCHAR},#{jsonType,jdbcType=VARCHAR},#{innerLever,jdbcType=INTEGER},#{orde,jdbcType=INTEGER},#{titleType,jdbcType=VARCHAR},#{childrenKey,jdbcType=VARCHAR},#{enumActiveConfigId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gennlife.rws.entity.ActiveIndexConfigCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      select uuid_short()
    </selectKey>
    insert into active_index_config_condition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="activeIndexConfigId != null" >
        active_index_config_id,
      </if>
      <if test="sourceTagNameDesc != null" >
        source_tag_name_desc,
      </if>
      <if test="sourceTagName != null" >
        source_tag_name,
      </if>
      <if test="targetTagNameDesc != null" >
        target_tag_name_desc,
      </if>
      <if test="targetTagName != null" >
        target_tag_name,
      </if>
      <if test="operatorSign != null" >
        operator_sign,
      </if>
      <if test="refRelation != null" >
        ref_relation,
      </if>
      <if test="logicSing != null" >
        logic_sing,
      </if>
      <if test="refActiveId != null" >
        ref_active_id,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="refActiveName != null" >
        ref_active_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="needPath != null" >
        need_path,
      </if>
      <if test="operatorSignDesc != null" >
        operator_sign_desc,
      </if>
      <if test="conditionType != null" >
        condition_type,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="activeIndexConfigId != null" >
        #{activeIndexConfigId,jdbcType=VARCHAR},
      </if>
      <if test="sourceTagNameDesc != null" >
        #{sourceTagNameDesc,jdbcType=VARCHAR},
      </if>
      <if test="sourceTagName != null" >
        #{sourceTagName,jdbcType=VARCHAR},
      </if>
      <if test="targetTagNameDesc != null" >
        #{targetTagNameDesc,jdbcType=VARCHAR},
      </if>
      <if test="targetTagName != null" >
        #{targetTagName,jdbcType=VARCHAR},
      </if>
      <if test="operatorSign != null" >
        #{operatorSign,jdbcType=VARCHAR},
      </if>
      <if test="refRelation != null" >
        #{refRelation,jdbcType=VARCHAR},
      </if>
      <if test="logicSing != null" >
        #{logicSing,jdbcType=VARCHAR},
      </if>
      <if test="refActiveId != null" >
        #{refActiveId,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="refActiveName != null" >
        #{refActiveName,jdbcType=VARCHAR},
      </if>
      <if test="refActiveName != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="needPath != null" >
        #{needPath,jdbcType=INTEGER},
      </if>
      <if test="operatorSignDesc != null" >
        #{operatorSignDesc,jdbcType=VARCHAR},
      </if>
      <if test="conditionType != null" >
        #{conditionType,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gennlife.rws.entity.ActiveIndexConfigCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    update active_index_config_condition
    <set >
      <if test="activeIndexConfigId != null" >
        active_index_config_id = #{activeIndexConfigId,jdbcType=VARCHAR},
      </if>
      <if test="sourceTagNameDesc != null" >
        source_tag_name_desc = #{sourceTagNameDesc,jdbcType=VARCHAR},
      </if>
      <if test="sourceTagName != null" >
        source_tag_name = #{sourceTagName,jdbcType=VARCHAR},
      </if>
      <if test="targetTagNameDesc != null" >
        target_tag_name_desc = #{targetTagNameDesc,jdbcType=VARCHAR},
      </if>
      <if test="targetTagName != null" >
        target_tag_name = #{targetTagName,jdbcType=VARCHAR},
      </if>
      <if test="operatorSign != null" >
        operator_sign = #{operatorSign,jdbcType=VARCHAR},
      </if>
      <if test="refRelation != null" >
        ref_relation = #{refRelation,jdbcType=VARCHAR},
      </if>
      <if test="logicSing != null" >
        logic_sing = #{logicSing,jdbcType=VARCHAR},
      </if>
      <if test="refActiveId != null" >
        ref_active_id = #{refActiveId,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="refActiveName != null" >
        ref_active_name = #{refActiveName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="needPath != null" >
        need_path = #{needPath,jdbcType=INTEGER},
      </if>
      <if test="operatorSignDesc != null" >
        operator_sign_desc = #{operatorSignDesc,jdbcType=VARCHAR},
      </if>
      <if test="conditionType != null" >
        condition_type = #{conditionType,jdbcType=INTEGER}
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateRefNameByRefId" parameterType="java.lang.String" >

    UPDATE active_index_config_condition SET ref_active_name =#{name,jdbcType=VARCHAR} where ref_active_id = #{id,jdbcType=VARCHAR}

  </update>
  <update id="updateByPrimaryKey" parameterType="com.gennlife.rws.entity.ActiveIndexConfigCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    update active_index_config_condition
    set active_index_config_id = #{activeIndexConfigId,jdbcType=VARCHAR},
      source_tag_name_desc = #{sourceTagNameDesc,jdbcType=VARCHAR},
      source_tag_name = #{sourceTagName,jdbcType=VARCHAR},
      target_tag_name_desc = #{targetTagNameDesc,jdbcType=VARCHAR},
      target_tag_name = #{targetTagName,jdbcType=VARCHAR},
      operator_sign = #{operatorSign,jdbcType=VARCHAR},
      ref_relation = #{refRelation,jdbcType=VARCHAR},
      logic_sing = #{logicSing,jdbcType=VARCHAR},
      ref_active_id = #{refActiveId,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
    ref_active_name=#{reActiveName,jdbcType=VARCHAR},
    type=#{type,jdbcType=INTEGER},
    level=#{level,jdbcType=INTEGER},
    need_path=#{needPath,jdbcType=INTEGER},
    operator_sign_desc=#{operatorSignDesc,jdbcType=VARCHAR},
    condition_type=#{conditionType,jdbcType=INTEGER},
    uuid=#{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 21:17:09 CST 2017.
    -->
    <foreach collection="list"  item="item" index="index" separator="," >
      replace active_index_config_condition
      set active_index_config_id = #{item.activeIndexConfigId,jdbcType=VARCHAR},
        source_tag_name_desc = #{item.sourceTagNameDesc,jdbcType=VARCHAR},
        source_tag_name = #{item.sourceTagName,jdbcType=VARCHAR},
        target_tag_name_desc = #{item.targetTagNameDesc,jdbcType=VARCHAR},
        target_tag_name = #{item.targetTagName,jdbcType=VARCHAR},
        operator_sign = #{item.operatorSign,jdbcType=VARCHAR},
        ref_relation = #{item.refRelation,jdbcType=VARCHAR},
        logic_sing = #{item.logicSing,jdbcType=VARCHAR},
        ref_active_id = #{item.refActiveId,jdbcType=VARCHAR},
        value = #{item.value,jdbcType=VARCHAR},
        parent_id = #{item.parentId,jdbcType=VARCHAR},
      ref_active_name = #{item.refActiveName,jdbcType=VARCHAR},
      type = #{item.type,jdbcType=INTEGER},
      level = #{item.level,jdbcType=INTEGER},
      need_path = #{item.needPath,jdbcType=VARCHAR},
      operator_sign_desc = #{item.operatorSignDesc,jdbcType=VARCHAR}
      condition_type = #{item.conditionType,jdbcType=INTEGER}
      uuid = #{item.uuid,jdbcType=VARCHAR}
      where id = #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
</mapper>