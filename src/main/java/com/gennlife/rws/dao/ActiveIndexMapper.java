package com.gennlife.rws.dao;

import com.gennlife.rws.entity.ActiveIndex;
import com.gennlife.rws.entity.AggregationModel;
import com.gennlife.rws.entity.GroupAggregation;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ActiveIndexMapper{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    int insert(ActiveIndex record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    int insertSelective(ActiveIndex record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    ActiveIndex selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    int updateByPrimaryKeySelective(ActiveIndex record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table active_index
     *
     * @mbggenerated Wed Oct 18 21:17:09 CST 2017
     */
    int updateByPrimaryKey(ActiveIndex record);

    /**
     * 根据 项目id获取项目下所有已定义的指标或事件
     * @param param
     * @return
     */
    List<ActiveIndex> findByProjectId(Map<String, Object> param);
    List<ActiveIndex> findByProjectIdAndTypeNoPage(Map<String, Object> param);

    int countByParam(Map<String, Object> param);

    List<ActiveIndex> findByIds(List<String> param);

    List<ActiveIndex> findByParam(Map<String ,Object> param);
    List<ActiveIndex> findName(String name);

    void updateTempToActive(String activeId,Integer isTemp,String tempActiveId,String name);

    void replaceIntoActive(ActiveIndex activeIndex);

    ActiveIndex findByConfirmIdAndType(Map<String,Object> param);

    List<ActiveIndex> getActiveIndexByProjectId(@Param("createId") String uid,@Param("projectId") String projectId);
    //根据activeIds 查找 指标
    List<ActiveIndex> findByActiveIds(@Param("activeIndexIds") List<String> activeIndexIds);

    /**
     * 修改指标名称
     * @param params
     */
    int editActiveName(Map<String, Object> params);

    List<ActiveIndex> getAllResearchVariable(Map<String ,Object> param);

    Integer getAllResearchVariableCount(Map<String, Object> param);

    String findActiveName(String val);

    List<ActiveIndex> findReferenceActiveIndex(@Param("activeId") String activeId, @Param("isTmp") int isTmp);

    List<AggregationModel> getActiveVariantAggregation(String projectId);

    Integer getVariantAggregationCount(String projectId);

    String getActiveName(String activeIndexId);

    List<ActiveIndex> getClasActiveIdsNameAndIdsByProjectId(String projectId);

    List<ActiveIndex> getClasActiveIdsNameAndIdsOnContCheck( @Param("projectId") String projectId,@Param("createId") String uid,@Param("cortType") Integer cortType);
}